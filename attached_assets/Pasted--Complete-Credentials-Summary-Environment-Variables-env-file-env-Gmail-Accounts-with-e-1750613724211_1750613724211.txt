# Complete Credentials Summary

## Environment Variables (.env file)

```env
# Gmail Accounts with existing pickle files
GMAIL_ACCOUNT_1_EMAIL=kaplan.brian@gmail.com
GMAIL_ACCOUNT_1_PICKLE_FILE=/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_tokens/kaplan.brian_at_gmail.com.pickle

GMAIL_ACCOUNT_2_EMAIL=brian@downhome.com
GMAIL_ACCOUNT_2_PICKLE_FILE=/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_tokens/brian_at_downhome.com.pickle

GMAIL_ACCOUNT_3_EMAIL=brian@musiccityrodeo.com
GMAIL_ACCOUNT_3_PICKLE_FILE=/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_tokens/brian_at_musiccityrodeo.com.pickle

# Google API Credentials (using your existing paths)
GOOGLE_CREDENTIALS_PATH=/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_auth/clients.json
GOOGLE_SERVICE_ACCOUNT_PATH=/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/service-account-key.json
GOOGLE_SHEETS_ID=1Pa4prgHYiYnxSD1qw88HT-cnwhG4u74uCIN4v8rS18Y
GOOGLE_SHEETS_NAME=Receipt Dashboard
GOOGLE_VISION_API_KEY=AIzaSyBZ9qhpU4qn0QzUPLs4tZfKII52BEOELzc

# MongoDB Credentials
MONGODB_URI=mongodb+srv://kaplanbrian:gqxowLmJSGXvRAHH@expense.1q8c63f.mongodb.net/?retryWrites=true&w=majority&appName=Expense_BK
MONGODB_DATABASE=expense
MONGODB_COLLECTION=receipts

# R2 Storage Credentials
R2_ENDPOINT=https://33950783df90825d4b885322a8ea2f2f.r2.cloudflarestorage.com
R2_ACCESS_KEY=154b6375ad63f0852482f4551047785c
R2_SECRET_KEY=1f77f1dd75b20bbd913e0dab79057e10b96f6ca69197c6476165880dfba692a5
R2_BUCKET=expensesbk
R2_PUBLIC_URL=https://pub-33950783df90825d4b885322a8ea2f2f.r2.dev

# AI Settings
HUGGINGFACE_API_KEY=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

# Application Settings
DEBUG=false
LOG_LEVEL=INFO
PROCESSING_DAYS=30
MAX_CONCURRENT_PROCESSING=3
LOCAL_EXPORT_ENABLED=true
```

## Gmail Accounts Configuration (gmail_accounts.json)

```json
{
    "gmail_accounts": [
        {
            "email": "kaplan.brian@gmail.com",
            "display_name": "Personal Gmail",
            "pickle_file": "gmail_tokens/kaplan_brian_at_gmail_com.pickle",
            "client_file": "gmail_tokens/kaplan.brian_at_gmail.com_token.json",
            "enabled": true,
            "port": 8080
        },
        {
            "email": "brian@downhome.com",
            "display_name": "Down Home Business",
            "pickle_file": "gmail_tokens/brian_at_downhome_com.pickle",
            "client_file": "gmail_tokens/brian_at_downhome.com_token.json",
            "enabled": true,
            "port": 8082
        },
        {
            "email": "brian@musiccityrodeo.com",
            "display_name": "Music City Rodeo",
            "pickle_file": "gmail_tokens/brian_at_musiccityrodeo_com.pickle",
            "client_file": "gmail_tokens/brian_at_musiccityrodeo.com_token.json",
            "enabled": true,
            "port": 8081
        }
    ]
}
```

## Google Credentials Template (clients.json / credentials.json)

```json
{
    "web": {
        "client_id": "YOUR_CLIENT_ID.apps.googleusercontent.com",
        "project_id": "YOUR_PROJECT_ID",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_secret": "YOUR_CLIENT_SECRET",
        "redirect_uris": [
            "http://localhost:8080"
        ]
    }
}
```

## MongoDB Connection Test

```python
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

uri = "mongodb+srv://kaplanbrian:gqxowLmJSGXvRAHH@expense.1q8c63f.mongodb.net/?retryWrites=true&w=majority&appName=Expense_BK"

# Create a new client and connect to the server
client = MongoClient(uri, server_api=ServerApi('1'))

# Send a ping to confirm a successful connection
try:
    client.admin.command('ping')
    print("Pinged your deployment. You successfully connected to MongoDB!")
except Exception as e:
    print(e)
```

## File Paths Summary

### Local File Paths

- **Gmail Tokens Directory**: `/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_tokens/`
- **Gmail Auth Directory**: `/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/gmail_auth/`
- **Service Account Key**: `/Users/briankaplan/Backup/Desktop/Updated/bank-receipt-matcher/service-account-key.json`

### Pickle Files

- **Personal Gmail**: `kaplan.brian_at_gmail.com.pickle`
- **Down Home**: `brian_at_downhome.com.pickle`
- **Music City Rodeo**: `brian_at_musiccityrodeo.com.pickle`

### Google API Files Needed

- **clients.json** (OAuth credentials)
- **service-account-key.json** (Service account for server-to-server auth)
- **Token JSON files** for each account

## Security Notes

1. **Never commit these credentials to version control**
1. **Store in .env files that are gitignored**
1. **Rotate API keys periodically**
1. **Use environment variables in production**
1. **Restrict API key permissions to minimum required scopes**

## API Scopes Used

### Gmail API

- `https://www.googleapis.com/auth/gmail.readonly`
- `https://www.googleapis.com/auth/gmail.modify`
- `https://www.googleapis.com/auth/gmail.send`

### Google Sheets API

- `https://www.googleapis.com/auth/spreadsheets`

### Google Vision API

- Cloud Vision API for receipt processing

## Database Collections

Based on your MongoDB structure:

- **Database**: `expense`
- **Main Collection**: `receipts`
- **Additional Collections**: `email_intelligence`, `subscriptions`, `action_items`, `life_events`

## R2 Storage Structure

- **Bucket**: `expensesbk`
- **Public URL**: `https://pub-33950783df90825d4b885322a8ea2f2f.r2.dev`
- **Used for**: Receipt attachments, email attachments, processed documents