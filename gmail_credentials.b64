{
    "kaplan.brian@gmail.com": {
        "web": {
            "client_id": "409487441168-f6knaetqq9f5s960lvbujkps75op2et3.apps.googleusercontent.com",
            "project_id": "expenses-52877",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_secret": "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",
            "redirect_uris": [
                "http://localhost:8080"
            ],
            "javascript_origins": [
                "http://localhost:8080/"
            ],
            "scopes": [
                "https://www.googleapis.com/auth/gmail.readonly",
                "https://www.googleapis.com/auth/gmail.modify",
                "https://www.googleapis.com/auth/spreadsheets"
            ]
        }
    },
    "brian@downhome.com": {
        "web": {
            "client_id": "616745095508-nohpqpnh5c251ccmncpd7eej3nefu6kq.apps.googleusercontent.com",
            "project_id": "music-city-rodeo",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_secret": "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",
            "redirect_uris": [
                "http://localhost:8082"
            ],
            "javascript_origins": [
                "http://localhost:8082/"
            ],
            "scopes": [
                "https://www.googleapis.com/auth/gmail.readonly",
                "https://www.googleapis.com/auth/gmail.modify",
                "https://www.googleapis.com/auth/spreadsheets"
            ]
        }
    },
    "brian@musiccityrodeo.com": {
        "web": {
            "client_id": "576938328901-svmliarlv4dqdnnl2a0tr3kq9skleigt.apps.googleusercontent.com",
            "project_id": "email-462218",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_secret": "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",
            "redirect_uris": [
                "http://localhost:8081"
            ],
            "javascript_origins": [
                "http://localhost:8081/"
            ],
            "scopes": [
                "https://www.googleapis.com/auth/gmail.readonly",
                "https://www.googleapis.com/auth/gmail.modify",
                "https://www.googleapis.com/auth/spreadsheets"
            ]
        }
    }
}